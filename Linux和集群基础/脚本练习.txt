1、写一个脚本

   (1)、获取并列出当前系统上的所有磁盘设备；

   (2)、显示每个磁盘设备上每个分区相关的空间使用信息；
   
2、写一个脚本

   (1) 接受一个以上文件路径作为参数；

   (2) 显示每个文件拥有的行数；

   (3) 总结说明本次共为几个文件统计了其行数；
   
3、写一个脚本

   (1) 传递两个以上字符串当作用户名；

   (2) 创建这些用户；且密码同用户名；

   (3) 总结说明共创建了几个用户；

4、写一个脚本，新建20个用户，visitor1-visitor20；计算他们的ID之和；

5、写一脚本，分别统计/etc/rc.d/rc.sysinit、/etc/rc.d/init.d/functions和/etc/fstab文件中以#号开头的行数之和，以及总的空白行数；

6、写一个脚本，显示当前系统上所有默认shell为bash的用户的用户名、UID以及此类所有用户UID之和；

7、写一个脚本，显示当前系统上所有，拥有附加组的用户的用户名；并说明共有多少个此类用户；
grep "," /etc/group | cut -d: -f1

以上参考链接：http://www.178linux.com/57832

8、写一个脚本，完成以下功能

   (1) 假设某目录(/etc/rc.d/rc3.d/)下分别有K开头的文件和S开头的文件若干；

   (2) 显示所有以K开头的文件的文件名，并且给其附加一个stop字符串；

   (3) 显示所有以S开头的文件的文件名，并且给其附加一个start字符串；

   (4) 分别统计S开头和K开头的文件各有多少；
   
9、写一个脚本，完成以下功能

   (1) 脚本能接受用户名作为参数；

   (2) 计算此些用户的ID之和；
   
10、写一个脚本

   (1) 传递一些目录给此脚本；

   (2) 逐个显示每个目录的所有一级文件或子目录的内容类型；

   (3) 统计一共有多少个目录；且一共显示了多少个文件的内容类型；

11、写一个脚本

  通过命令行传递一个参数给脚本，参数为用户名

  如果用户的id号大于等于500，则显示此用户为普通用户；

12、写一个脚本

   (1) 添加10用户user1-user10；密码同用户名；

   (2) 用户不存在时才添加；存在时则跳过；

   (3) 最后显示本次共添加了多少用户；
   
13、写一脚本，用ping命令测试172.16.250.20-172.16.250.100以内有哪些主机在线，将在线的显示出来

14、打印九九乘法表；
以上参考链接：http://www.178linux.com/59460


1、写一个脚本，判断当前系统上所有用户的shell是否为可登录shell（即用户的shell不是/sbin/nologin）；分别这两类用户的个数；通过字符串比较来实现；
2、写一个脚本

    (1) 获取当前主机的主机名，保存于hostname变量中；

    (2) 判断此变量的值是否为localhost，如果是，则将当前主机名修改为www.magedu.com；

    (3) 否则，则显示当前主机名；
3、写一个脚本，完成如下功能

    (1) 传递一个磁盘设备文件路径给脚本，判断此设备是否存在；

    (2) 如果存在，则显示此设备上的所有分区信息；
4、写一个脚本，完成如下功能

   脚本能够接受一个参数；

   (1) 如果参数1为quit，则显示退出脚本，并执行正常退出；

   (2) 如果参数1为yes，则显示继续执行脚本；

   (3) 否则，参数1为其它任意值，均执行非正常退出；
5、写一个脚本，完成如下功能

   传递一个参数给脚本，此参数为gzip、bzip2或者xz三者之一；

   (1) 如果参数1的值为gzip，则使用tar和gzip归档压缩/etc目录至/backups目录中，并命名为/backups/etc-20160613.tar.gz；

   (2) 如果参数1的值为bzip2，则使用tar和bzip2归档压缩/etc目录至/backups目录中，并命名为/backups/etc-20160613.tar.bz2；

   (3) 如果参数1的值为xz，则使用tar和xz归档压缩/etc目录至/backups目录中，并命名为/backups/etc-20160613.tar.xz；

   (4) 其它任意值，则显示错误压缩工具，并执行非正常退出；
6、写一个脚本，接受一个路径参数：

   (1) 如果为普通文件，则说明其可被正常访问；

   (2) 如果是目录文件，则说明可对其使用cd命令；

   (3) 如果为符号链接文件，则说明是个访问路径；

   (4) 其它为无法判断；
7、写一个脚本，取得当前主机的主机名，判断

   (1) 如果主机名为localhost，或为"(none)"，则将其命名为mail.magedu.com；

   (2) 否则，显示现有的主机名即可；
8、写一脚本，接受一个用户名为参数；

   (1) 如果用户的id号为0,则显示其为管理员；

   (2) 如果用户的id号大于0且小于500, 则显示其为系统用户；

   (3) 否则，则显示其为普通用户；
9、写一个脚本，传递一个用户名参数给脚本；

   (1) 如果用户的id号大于等于500，且其默认shell为以sh结尾的字符串，则显示“a user can log system.”类的字符串；

   (2) 否则，则显示无法登录系统；

以上参考链接：http://www.178linux.com/60114


1、写一个脚本

  (1) 能接受四个参数：start, stop, restart, status

   start: 输出“starting 脚本名 finished.”

  (2) 其它任意参数，均报错退出；
2、写一个脚本，判断给定的用户是否登录了当前系统；

  (1) 如果登录了，则显示用户登录，脚本终止；

  (2) 每3秒钟，查看一次用户是否登录；
3、写一个脚本，显示用户选定要查看的信息；

   cpu) display cpu info

   mem) display memory info

   disk) display disk info

   quit) quit

   非此四项选择，则提示错误，并要求用户重新选择，只到其给出正确的选择为止；
#!/bin/bash
#
echo "cpu-->display cpu info"
echo "mem-->display mem info"
echo "disk-->display disk info"
echo "quit-->quit this script"
read -p "Input what you want to do:" input
until [ $input == "cpu" -o $input == "mem" -o $input == "disk" -o $input == "quit" ]
####注意"=="前后有空格
do
        read -p "error input,input what you want to do:" input
done
case $input in
cpu)
        lscpu;;
mem)
        cat /proc/meminfo;;
disk)
        fdisk -l;;
quit)
        echo "quit..."
        exit 0;;
esac
4、写一个脚本

  (1) 用函数实现返回一个用户的UID和SHELL；用户名通过参数传递而来；

  (2) 提示用户输入一个用户名或输入“quit”退出；

    当输入的是用户名，则调用函数显示用户信息；

    当用户输入quit，则退出脚本；进一步地：显示键入的用户相关信息后，再次提醒输出用户名或quit: 
5、写一个脚本，完成如下功能（使用函数）

   (1) 提示用户输入一个可执行命令的名字；获取此命令依赖的所有库文件；

   (2) 复制命令文件至/mnt/sysroot目录下的对应的rootfs的路径上，例如，如果复制的文件原路径是/usr/bin/useradd，则复制到/mnt/sysroot/usr/bin/目录中；

   (3) 复制此命令依赖的各库文件至/mnt/sysroot目录下的对应的rootfs的路径上；规则同上面命令相关的要求；
以上参考链接：http://www.178linux.com/61154